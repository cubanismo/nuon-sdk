<?xml version='1.0'?>
<xsl:stylesheet version='1.0'
    xmlns:xsl='http://www.w3.org/1999/XSL/Transform'>

  <xsl:output method="xml" indent="yes"/>
  <!-- nml document generated by xml -> nml xslt program and xt -->

  <xsl:template match='/'>
  	<xsl:comment>nml document generated by apply xslt stylesheet to xml doc.</xsl:comment>
 		<xsl:apply-templates/>
	 </xsl:template>
  	
  <xsl:template match='comment()'>
  	<xsl:copy/>
  </xsl:template>
	
  <xsl:template match='processing-instruction()'>
  </xsl:template>
	
  <xsl:template match='script'>
  	<xsl:copy-of select="."/>
  </xsl:template>

	<xsl:template match='svg'>
  </xsl:template>
	
	<xsl:template match="snml">
		<nml>
 		<xsl:apply-templates/>
		</nml>  	
  </xsl:template>
		
	<xsl:template match="page">
		<body>
  		<xsl:attribute name='width'><xsl:value-of select='@width'/></xsl:attribute>
  		<xsl:attribute name='height'><xsl:value-of select='@height'/></xsl:attribute>
  		<xsl:attribute name='start'><xsl:value-of select='@first-focus'/></xsl:attribute>
    	<xsl:if test='@back-color'>
				<xsl:attribute name="bgColor"><xsl:value-of select='@back-color'/></xsl:attribute>
   		</xsl:if>
    	<xsl:if test="not(@back-color)">
				<xsl:attribute name="bgColor">linen</xsl:attribute>
			</xsl:if>
    	<xsl:if test="on-load">
				<xsl:attribute name="onLoad"><xsl:value-of select='on-load[text()]'/></xsl:attribute>
			</xsl:if>
			<textStyle name="defaultTextStyle" font="fonts/system.ttf" size="24" color="black"/>
			<xsl:apply-templates/>
		</body>
	</xsl:template>

<!--Required attributes are put in element tag -->
<!--Required attributes for text-box are: left, top, width, height -->
<xsl:template match='text-box'>
	<widget type="textContainer" x="{@left}" y="{@top}" width="{@width}" height="{@height}">
   	<xsl:if test='@name'>
			<xsl:attribute name="name"><xsl:value-of select='@name'/></xsl:attribute>
 		</xsl:if>
   	<xsl:if test='@back-color'>
			<xsl:attribute name="bgColor"><xsl:value-of select='@back-color'/></xsl:attribute>
 		</xsl:if>
   	<xsl:if test="on-focus">
			<xsl:attribute name="onFocus"><xsl:value-of select='on-focus[text()]'/></xsl:attribute>
		</xsl:if>
   	<xsl:if test="on-blur">
			<xsl:attribute name="onBlur"><xsl:value-of select='on-blur[text()]'/></xsl:attribute>
		</xsl:if>
	  <xsl:if test="on-click">
			<xsl:attribute name="onClick"><xsl:value-of select='on-click[text()]'/></xsl:attribute>
		</xsl:if>
		<xsl:apply-templates/>
	</widget>
</xsl:template>

<!--Required attributes are put in element tag -->
<!--Required attributes for text-menu are: left, top, width, height, select-style, select-line -->
<xsl:template match='text-menu'>
	<widget type="textContainer" x="{@left}" y="{@top}" width="{@width}"
	 height="{@height}" selectTextStyle="{@select-style}" selectedLine="{@select-line}">
  	<xsl:if test='@name'>
  		<xsl:attribute name='name'><xsl:value-of select='@name'/></xsl:attribute>
  	</xsl:if>
     	<xsl:if test='@back-color'>
				<xsl:attribute name="bgColor"><xsl:value-of select='@back-color'/></xsl:attribute>
   		</xsl:if>
   	<xsl:if test="on-focus">
			<xsl:attribute name="onFocus"><xsl:value-of select='on-focus[text()]'/></xsl:attribute>
		</xsl:if>
   	<xsl:if test="on-blur">
			<xsl:attribute name="onBlur"><xsl:value-of select='on-blur[text()]'/></xsl:attribute>
		</xsl:if>
    <xsl:if test="on-click">
			<xsl:attribute name="onClick"><xsl:value-of select='on-click[text()]'/></xsl:attribute>
		</xsl:if>
		<xsl:apply-templates/>
	</widget>
</xsl:template>

<xsl:template match='text-style'>
	<textStyle name="{@name}">
    <xsl:if test='@size'>
    	<xsl:attribute name='size'><xsl:value-of select='@size'/></xsl:attribute>
    </xsl:if>
    <xsl:if test='@color'>
    	<xsl:attribute name='color'><xsl:value-of select='@color'/></xsl:attribute>
  	</xsl:if>
    <xsl:if test='@antialias'><xsl:attribute name='antialias'><xsl:value-of select='@antialias'/></xsl:attribute></xsl:if>
    <xsl:if test='@gridfit'><xsl:attribute name='gridfit'><xsl:value-of select='@gridfit'/></xsl:attribute></xsl:if>
   <xsl:if test='@encoding'><xsl:attribute name='encoding'><xsl:value-of select='@encoding'/></xsl:attribute></xsl:if>
   <xsl:if test='@space-extra'><xsl:attribute name='spaceExtra'><xsl:value-of select='@space-extra'/></xsl:attribute></xsl:if>
   <xsl:if test='@letter-extra'><xsl:attribute name='letterExtra'><xsl:value-of select='@letter-extra'/></xsl:attribute></xsl:if>
   <xsl:if test='@horizontal-scale'><xsl:attribute name='horScale'><xsl:value-of select='@horizontal-scale'/></xsl:attribute></xsl:if>
 	<xsl:if test='@font'>
    	<xsl:attribute name='font'><xsl:value-of select='@font'/></xsl:attribute>
  	</xsl:if>
  	<xsl:if test="not(@font)"><xsl:attribute name='font'>fonts/system.ttf</xsl:attribute></xsl:if>
  	<xsl:apply-templates/>
	</textStyle> 
</xsl:template>

<xsl:template match='text-line'>
	<textLine x="{@left}" y="{@base}">
	<xsl:choose>
  	<xsl:when test = '@text-style'>
  		<xsl:attribute name='style'><xsl:value-of select='@text-style'/></xsl:attribute>
  	</xsl:when>
  	<xsl:otherwise>
  		<xsl:attribute name='style'>defaultTextStyle</xsl:attribute>
  	</xsl:otherwise>	
	</xsl:choose>			
	<xsl:attribute name='content'><xsl:value-of select='text()'/></xsl:attribute>
	</textLine>
</xsl:template>

<xsl:template match='on-load'>
</xsl:template>
<xsl:template match='on-focus'>
</xsl:template>
<xsl:template match='on-blur'>
</xsl:template>
<xsl:template match='on-click'>
</xsl:template>
<!--
<xsl:template match='*|@*'>
		<xsl:copy>
			<xsl:apply-templates select='@*|node()'/>
		</xsl:copy>
	</xsl:template>
-->

</xsl:stylesheet>
